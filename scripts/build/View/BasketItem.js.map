{"version":3,"sources":["scripts/dev/View/BasketItem.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;QAIM,UAAU;iBAAV,UAAU;kCAAV,UAAU;;uCAAV,UAAU;;;kBAAV,UAAU;;qBAAV,UAAU;;mBAEN,kBAAG;AACL,uBAAO;AACH,4CAAwB,EAAE,IAAI,CAAC,gBAAgB;AAC/C,wCAAoB,EAAE,IAAI,CAAC,YAAY;AACvC,yCAAqB,EAAE,IAAI,CAAC,aAAa;AACzC,2CAAuB,EAAE,IAAI,CAAC,eAAe;iBAChD,CAAC;aACL;;;;;mBAGM,mBAAG;AACN,uBAAO,IAAI,CAAC;aACf;;;mBAES,sBAAG;AACT,oBAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;AACpD,oBAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;;AAE1D,oBAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC3B;;;mBAEK,gBAAC,UAAU,EAAE;AACf,oBAAI,UAAU,CAAC,KAAK,EAAE,EAAE;AACpB,wBAAI,CAAC,GAAG,CAAC,MAAM,CAAE,+BAAkB,EAAC,KAAK,EAAE,UAAU,EAAE,UAAU,+BAAmB,EAAC,CAAC,CAAC,GAAG,CAAE,CAAC;AAC7F,wBAAI,CAAC,GAAG,CAAC,MAAM,CAAC,+CAA+C,CAAC,CAAC;AACjE,wBAAI,CAAC,GAAG,CAAC,MAAM,CAAC,iCAAiC,CAAC,CAAC;iBACtD,MAAM;AACH,wBAAI,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC;AAC/C,wBAAI,CAAC,GAAG,CAAC,MAAM,CAAC,oDAAoD,GAAG,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC,GAAG,MAAM,CAAC,CAAC;AAC/G,wBAAI,CAAC,GAAG,CAAC,MAAM,CACX,KAAK,GAAG,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,KAAK,GACvC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,CAC/B,CAAC;AACF,wBAAI,CAAC,GAAG,CAAC,MAAM,CAAC,mCAAmC,CAAC,CAAC;AACrD,wBAAI,CAAC,GAAG,CAAC,MAAM,CAAC,uCAAuC,CAAC,CAAC;iBAC5D;aACJ;;;mBAEa,0BAAG;AACb,oBAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;aACrB;;;mBAEY,yBAAG;AACZ,oBAAI,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE;AACzB,wBAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;iBACrB;aACJ;;;mBAEc,2BAAG;AACd,oBAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;aACpC;;;mBAEU,qBAAC,IAAI,EAAE;AACd,oBAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;AACjB,oBAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACrB;;;mBAEW,wBAAG;AACX,oBAAI,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aAC/C;;;mBAEe,0BAAC,GAAG,EAAE;AAClB,oBAAI,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,EAAE,qBAAS,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;aAC/D;;;eAjEC,UAAU;OAAS,qBAAS,IAAI;;qBAoEvB,UAAU","file":"scripts/dev/View/BasketItem.js","sourcesContent":["import Backbone from 'libs/backbone';\nimport ProductSelect from './ProductSelect'\nimport productCollection from 'Model/ProductCollection'\n\nclass BasketItem extends Backbone.View {\n\n    events() {\n        return {\n            'change [name=\"amount\"]': this.onUiAmountChange,\n            'click [name=\"add\"]': this.onUiAddClick,\n            'click [name=\"save\"]': this.onUiSaveClick,\n            'click [name=\"delete\"]': this.onUiDeleteClick\n        };\n    }\n\n    //noinspection JSMethodCanBeStatic\n    tagName() {\n        return 'li';\n    }\n\n    initialize() {\n        this.listenTo(this.model, 'sync', this.onModelSync);\n        this.listenTo(this.model, 'destroy', this.onModelDestroy);\n\n        this.render(this.model);\n    }\n\n    render(basketItem) {\n        if (basketItem.isNew()) {\n            this.$el.append((new ProductSelect({model: basketItem, collection: productCollection}).$el));\n            this.$el.append('<input type=\"number\" min=\"1\" name=\"amount\" />');\n            this.$el.append('<button name=\"add\">Add</button>');\n        } else {\n            this.$el.append(basketItem.get('name') + ': ');\n            this.$el.append('<input type=\"number\" min=\"1\" name=\"amount\" value=\"' + basketItem.get('itemsAmount') + '\" />');\n            this.$el.append(\n                ' x ' + basketItem.get('price') + ' = ' +\n                basketItem.get('totalPrice')\n            );\n            this.$el.append('<button name=\"save\">Save</button>');\n            this.$el.append('<button name=\"delete\">Delete</button>');\n        }\n    }\n\n    onModelDestroy() {\n        this.$el.remove();\n    }\n\n    onUiSaveClick() {\n        if (this.model.hasChanged()) {\n            this.model.save();\n        }\n    }\n\n    onUiDeleteClick() {\n        this.model.destroy({wait: true});\n    }\n\n    onModelSync(item) {\n        this.$el.empty();\n        this.render(item);\n    }\n\n    onUiAddClick() {\n        this.model.trigger('save-item', this.model);\n    }\n\n    onUiAmountChange(evt) {\n        this.model.set('itemsAmount', Backbone.$(evt.target).val());\n    }\n}\n\nexport default BasketItem;"]}